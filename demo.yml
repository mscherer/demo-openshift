apiVersion: v1
kind: Template
labels:
  app: clc
  template: python
message: 'The following software have been deployed on https://${APPLICATION_DOMAIN}.'

metadata:
  annotations:
    description: A deployment of demo website
    iconClass: icon-python
    openshift.io/display-name: demo
    openshift.io/documentation-url: TODO
    openshift.io/long-description: TODO
    openshift.io/provider-display-name: OSPO, Red Hat, Inc.
    tags: quickstart,python
    template.openshift.io/bindable: 'false'
  name: clc
objects:

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    name: ${NAME}
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: ${NAME}

- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    source:
      git:
        ref: master
        uri: https://gitlab.com/osci/osci.io.git
      type: Git
      dockerfile: |-
        FROM registry.fedoraproject.org/fedora:33

        WORKDIR /srv/
        COPY . /srv

        RUN dnf install -y rubygem-bundler ruby-devel openssl-devel curl-devel make gcc-c++ gcc git redhat-rpm-config libxml2-devel patch && dnf clean all
        RUN bundle install
        RUN LC_ALL=C.utf8 bundle exec jekyll build

        FROM registry.fedoraproject.org/fedora:36
        EXPOSE 8080
        RUN dnf install --setopt=install_weak_deps=False --best -y caddy && dnf clean all
        COPY --from=0 /srv/_site/ /var/www/html/
        CMD ["/usr/bin/caddy", "file-server", "-listen", ":8080", "-root", "/var/www/html/"]

    strategy:
      type: Docker
  triggers:
  - type: ImageChange
  - type: ConfigChange




- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}
      name: ${NAME}
      spec:
        containers:
        - name: ${NAME}
          image: ' '
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}

    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
    - type: ConfigChange

parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: demo

- description: Application domain name, used for the route
  displayName: Application domain
  name: APPLICATION_DOMAIN
  required: true
  value: ''

- description: Maximum amount of memory the application container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1024Mi

